(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{168:function(a,t,n){"use strict";n.r(t);var s=n(0),o=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"_3-hello-worold"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-hello-worold","aria-hidden":"true"}},[a._v("#")]),a._v(" 3-Hello Worold")]),a._v(" "),n("h2",{attrs:{id:"编写运行hello-world"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编写运行hello-world","aria-hidden":"true"}},[a._v("#")]),a._v(" 编写运行Hello World")]),a._v(" "),n("p",[a._v("先写个Hello World示例来稍微了解下Golang吧。")]),a._v(" "),n("p",[a._v("在随便哪个目录创建一个hello-world.go文件")]),a._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[a._v("package")]),a._v(" main\n\n"),n("span",{attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),n("span",{attrs:{class:"token string"}},[a._v('"fmt"')]),a._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[a._v("func")]),a._v(" "),n("span",{attrs:{class:"token function"}},[a._v("main")]),n("span",{attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    fmt"),n("span",{attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{attrs:{class:"token function"}},[a._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{attrs:{class:"token string"}},[a._v('"Hello World!"')]),n("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),n("span",{attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),n("p",[a._v("在终端使用 "),n("code",[a._v("go run")]),a._v(" 命令编译运行这个go文件。")]),a._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[a._v("go run hello-world.go\n")])])]),n("p",[a._v("此时你应该能看到终端输出了 "),n("code",[a._v("Hello World!")]),a._v(" 。")]),a._v(" "),n("p",[n("img",{attrs:{src:"http://ww1.sinaimg.cn/large/6a43d05fly1fvlmb5rengj20cc01ra9x.jpg",alt:"Hello World!"}})]),a._v(" "),n("h2",{attrs:{id:"先简单的看下golang语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#先简单的看下golang语法","aria-hidden":"true"}},[a._v("#")]),a._v(" 先简单的看下Golang语法")]),a._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[a._v("package")]),a._v(" main\n\n"),n("span",{attrs:{class:"token comment"}},[a._v("// Golang类似Java等语言，需要在每个源码文件的开头声明当前文件所属的包的名称，")]),a._v("\n"),n("span",{attrs:{class:"token comment"}},[a._v("// 也就是这个包的导入路径（import path），这里声明了这个文件所属于main包中。")]),a._v("\n")])])]),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),n("span",{attrs:{class:"token string"}},[a._v('"fmt"')]),a._v("\n\n"),n("span",{attrs:{class:"token comment"}},[a._v("// 同样类似Java等语言，当需要导入其他包的时候，")]),a._v("\n"),n("span",{attrs:{class:"token comment"}},[a._v("// 需要使用import关键字声明需要导入的包的导入路径，导入的路径名称是一个字符串。")]),a._v("\n")])])]),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[a._v("func")]),a._v(" "),n("span",{attrs:{class:"token function"}},[a._v("main")]),n("span",{attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),n("span",{attrs:{class:"token operator"}},[a._v("...")]),a._v("\n"),n("span",{attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),n("span",{attrs:{class:"token comment"}},[a._v("// 这里使用func关键字声明了一个名为main的方法。")]),a._v("\n"),n("span",{attrs:{class:"token comment"}},[a._v("// 值得注意的是，在Golang中包裹函数体的第一个大括号，必须和声明函数的语句保持同一行，否则编译时会报错。")]),a._v("\n")])])]),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[a._v("fmt"),n("span",{attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{attrs:{class:"token function"}},[a._v("Println")]),n("span",{attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{attrs:{class:"token string"}},[a._v('"Hello World!"')]),n("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),n("span",{attrs:{class:"token comment"}},[a._v('// 这里就调用了fmt包下的Println方法，将"Hello World!"字符串输出到标准输出中。')]),a._v("\n")])])]),n("h2",{attrs:{id:"go-run-命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#go-run-命令","aria-hidden":"true"}},[a._v("#")]),a._v(" go run 命令")]),a._v(" "),n("p",[a._v("通过 "),n("code",[a._v("go help run")]),a._v(" 命令可以查看 "),n("code",[a._v("go run")]),a._v(" 命令的官方介绍。")]),a._v(" "),n("p",[n("img",{attrs:{src:"http://ww1.sinaimg.cn/large/6a43d05fly1fvloaq70fxj20g90c23z7.jpg",alt:"go help run"}})]),a._v(" "),n("p",[a._v("简单来说， "),n("code",[a._v("go run")]),a._v(" 命令编译并运行了相应的Golang源码。")]),a._v(" "),n("p",[a._v("此外 "),n("code",[a._v("go run")]),a._v(" 的参数也可以是一个目录路径，它会自动寻找目录下的main包中的main方法并执行。在刚刚的hello-world.go文件目录下执行 "),n("code",[a._v("go run .")]),a._v(" 试试。")]),a._v(" "),n("p",[a._v("如果想了解 "),n("code",[a._v("go run")]),a._v(" 这个命令在后面做了什么工作，可以加上 "),n("code",[a._v("-n")]),a._v(" 参数，比如 "),n("code",[a._v("go run -n hello-world.go")]),a._v(" 。")]),a._v(" "),n("p",[n("img",{attrs:{src:"http://ww1.sinaimg.cn/large/6a43d05fly1fvlorjhzu7j20n30hnmz4.jpg",alt:"go run -n ."}})]),a._v(" "),n("blockquote",[n("p",[a._v("Tip: Golang在1.5版本之后实现了自举（即使用Golang语言编写并编译Golang本身），Golang底层的源码基本都是由Golang实现的，像 "),n("code",[a._v("go run")]),a._v(" 命令的源码自然也是，可以在Golang的安装路径下的 "),n("code",[a._v("src")]),a._v(" 目录找到。\n"),n("code",[a._v("go run")]),a._v(" 的源码在 "),n("code",[a._v("<golang安装路径>/src/cmd/go/internal/run/run.go")]),a._v(" 中。")])])])}],!1,null,null,null);o.options.__file="3-HelloWorld.md";t.default=o.exports}}]);